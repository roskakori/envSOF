PURPOSE

   This directory contains the full source code for the syntax parser
   and the feature scanner.

   If you want to recompile them or play around, you need DICE. This
   compiler has recently become freeware, you can obtain the full
   version from Aminet.

SCANNER

   The scanner is pretty simple and consists of just one source file.
   This should be straight forward.

   However, one important thing to know is the "-ms1" option for DCC
   in the DMakefile. This makes the string constants like "infix" and
   "frozen" end up in the code hunk, so that they are also loaded.
   Otherwise, the whole string comparison stuff with try_skip_word()
   won't work.

   Basically, the scanner looks for lines ending in " is" and regards
   the first word as the feature name. Because of that, only feature
   routines are recognized and simple feature attributes are ignored.
   This is just like in most other scanners, where you only see
   function declarations, but no variables.

   Use "dmake" to compile.

SYNTAX PARSER

   The syntax parser is a lot more complicated. Most of the source
   files are from Dietmar Eilert's examples and have not been touched
   at all.

   Changed or added files are:

      funcs.c - Implements the actual parser.

      language.c - A couple of string functions used for detection of
      reserved word and some other syntax elements. Also declares
      several arrays for the various character classes. However, the
      parser does not yet invoke all this.

      tag.a - Declares symbols with the name of parser (_LibName and
      LibId). If these do not match the name in funcs.c, the parser
      won't show up in the configuration window.

   Use "dmake" to compile.

Thomas.

